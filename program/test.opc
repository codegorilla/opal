package main;

import std.math;
import std.crypto;
import lang.math;

import zlib.net.server.auth;
import zlib.net.client.auth;

//use zlib.net.server.auth;
//use zlib.net.client.auth;

//use std.math;
//use std.crypto;


private typealias IntPtr = *int[10];

final class Token extends Object, Number {

  typealias FloatPtr = *float;

  private virtual final def getLexeme () const -> String {
    var a: int = 0;
  }

  private virtual final def getLexeme1 () const {
    var a: int = 0;
  }

  virtual abstract override def getToken (x: IntPtr) const & -> *int {
    typealias IntPtr = *int;
    var b: int = 0;
  }

}

def test () {
  typealias IntPtr = *int;
  var c: int = 0;
}
